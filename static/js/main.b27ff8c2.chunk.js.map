{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Project/Project.js","components/ProjectHolder/ProjectHolder.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","target","Footer","Project","props","name","link","onClick","dataId","ProjectHolder","state","projects","blah","console","log","alert","window","confirm","this","map","index","key","activateMelting","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2UA6BeA,MA1Bf,WACE,OAAQ,6BACN,4BAAQC,UAAU,UAClB,6BACU,2BACI,uBAAGC,KAAK,sCAAsCC,OAAO,SAArD,WAEJ,2BACI,uBAAGD,KAAK,sCAAsCC,OAAO,SAArD,aAEJ,2BACI,uBAAGD,KAAK,4DAA4DC,OAAO,SAA3E,kBAEJ,2BACI,uBAAGD,KAAK,4CAA4CC,OAAO,SAA3D,aAEJ,2BACI,uBAAGD,KAAK,6BAA6BC,OAAO,SAA5C,kB,MCVHC,MAPf,WACE,OACE,4BAAQH,UAAU,Y,kCCuBPI,MAzBf,SAAiBC,GACf,OACE,yBAAKL,UAAU,WACb,yBAAKA,UAAU,WAEX,6BACE,gCACI,4BACKK,EAAMC,OAIf,yBAAKN,UAAU,iBAAf,wBAIF,2BACE,6DADF,IAC8CK,EAAME,MAEpD,4BAAQC,QAASH,EAAMG,SAAUH,EAAMI,WC0DlCC,G,wDA5EX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,SAAU,CACN,CACIN,KAAM,2BACNC,KAAM,uBAAGN,KAAK,6DAA6DC,OAAO,SAA5E,cAEV,CACII,KAAM,2BACNC,KAAM,uBAAGN,KAAK,mDAAmDC,OAAO,SAAlE,cAEV,CACII,KAAM,uBACNC,KAAM,uBAAGN,KAAK,4CAA4CC,OAAO,SAA3D,cAEV,CACII,KAAM,kCACNC,KAAM,uBAAGN,KAAK,sDAAsDC,OAAO,SAArE,yBAEV,CACII,KAAM,qBACNC,KAAM,uBAAGN,KAAK,gDAAgDC,OAAO,SAA/D,wBAEV,CACII,KAAM,qCACNC,KAAM,uBAAGN,KAAK,kDAAkDC,OAAO,SAAjE,cAEV,CACII,KAAM,cACNC,KAAM,uBAAGN,KAAK,kDAAkDC,OAAO,SAAjE,gBA9BT,E,4DAqCEW,GAGX,OADAC,QAAQC,IAAIF,GACJA,GACJ,IAAK,qBACDC,QAAQC,IAAI,sBACZ,MACJ,IAAK,2BACDC,MAAM,yBACN,MACJ,IAAK,2BACDC,OAAOC,QAAQ,mCACf,MACJ,QACIJ,QAAQC,IAAI,uC,+BAGd,IAAD,OACL,OACI,yBAAKf,UAAU,iBACdmB,KAAKR,MAAMC,SAASQ,KAAI,SAACR,EAAUS,GAAX,OAC7B,kBAAC,EAAD,CACAf,KAAQM,EAASN,KACjBC,KAAQK,EAASL,KACjBE,OAAUG,EAASN,KACnBgB,IAAOD,EACPb,QAAS,WACL,EAAKe,gBAAgBX,EAASN,iB,GAjEdkB,IAAMC,YCenBC,MAZf,WACE,OACE,yBAAK1B,UAAU,OACb,iEACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAc2B,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.b27ff8c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (<div>\r\n    <header className=\"header\">\r\n    <div>\r\n              <p>\r\n                  <a href=\"https://github.com/fruityvegetables\" target=\"blank\">Github</a>\r\n              </p>\r\n              <p>\r\n                  <a href=\"https://www.pnkedin.com/in/gtroyer/\" target=\"blank\">LinkedIn</a>\r\n              </p>\r\n              <p>\r\n                  <a href=\"https://stackexchange.com/users/17871593/fruityvegetables\" target=\"blank\">StackExchange</a>\r\n              </p>\r\n              <p>\r\n                  <a href=\"https://www.facebook.com/FruityVegetables\" target=\"blank\">FaceBook</a>\r\n              </p>\r\n              <p>\r\n                  <a href=\"mailto:gg.troyer@gmail.com\" target=\"blank\">Email Me!</a>\r\n              </p>\r\n              \r\n      </div>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./Project.css\";\r\n\r\nfunction Project(props) {\r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"content\">\r\n\r\n          <div>\r\n            <strong>\r\n                <h3>\r\n                    {props.name}\r\n\r\n                </h3>\r\n                </strong> \r\n            <div className=\"img-container\">\r\n          For gif image later\r\n            </div>\r\n          </div>\r\n          <p>\r\n            <strong>Link to deployed version:</strong> {props.link}\r\n          </p>\r\n          <button onClick={props.onClick}>{props.dataId}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;","import React from \"react\";\r\nimport Project from \"../Project/Project.js\";\r\nimport \"./ProjectHolder.css\";\r\nclass ProjectHolder extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            projects: [\r\n                {\r\n                    name: \"React Employee Directory\", \r\n                    link: <a href=\"https://fruityvegetables.github.io/reactEmployeeDirectory/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"React Google Book Search\", \r\n                    link: <a href=\"https://gtroyer-react-book-search.herokuapp.com/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"Career Resource Wiki\", \r\n                    link: <a href=\"https://secure-shelf-77308.herokuapp.com/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"Employee CMS - Node Application\", \r\n                    link: <a href=\"https://github.com/fruityvegetables/employeeTracker\" target=\"blank\">It is a GitHub Repo!</a>\r\n                },\r\n                {\r\n                    name: \"Express Note Taker\", \r\n                    link: <a href=\"https://github.com/fruityvegetables/NoteTaker\" target=\"blank\">Also a GitHub Repo!</a>\r\n                },\r\n                {\r\n                    name: \"Superhero Background & Backgrounds\", \r\n                    link: <a href=\"https://cynthia-dm1216.github.io/ProjectGroup1/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"PlantSheets\", \r\n                    link: <a href=\"https://cynthia-dm1216.github.io/ProjectGroup1/\" target=\"blank\">Click me!</a>\r\n                }\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n   activateMelting(blah){\r\n        //doom function goes here\r\n        console.log(blah)\r\n        switch (blah) {\r\n            case \"Express Note Taker\": \r\n                console.log(\"this is note taker\");\r\n                break;\r\n            case \"React Employee Directory\":\r\n                alert(\"this is emp directory\");\r\n                break;\r\n            case \"React Google Book Search\":\r\n                window.confirm(\"Do YOU REALLY WANNA SEE THIS???\");\r\n                break;\r\n            default: \r\n                console.log(\"no switch case made for this yet\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"projectHolder\">\r\n            {this.state.projects.map((projects, index) => (\r\n        <Project \r\n        name = {projects.name}\r\n        link = {projects.link}\r\n        dataId = {projects.name} \r\n        key = {index}\r\n        onClick={() => {\r\n            this.activateMelting(projects.name);\r\n           \r\n         }}\r\n        />\r\n\r\n        \r\n      ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectHolder;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header.js';\nimport Footer from './components/Footer/Footer.js';\nimport ProjectHolder from './components/ProjectHolder/ProjectHolder.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Garrett Troyer's React Portfolio!</h1>\n      <Header />\n      <ProjectHolder />\n      <Footer />\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}