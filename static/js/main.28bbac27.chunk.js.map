{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Project/Project.js","components/ProjectHolder/ProjectHolder.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","target","Footer","Project","props","name","link","onClick","dataId","ProjectHolder","state","projects","blah","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","image1","Image","image2","canvas","document","getElementById","ctx","getContext","width","height","meltCan","createElement","meltCtx","images","bgImage","meltImage","settings","colSize","maxDev","maxDiff","fallSpeed","columns","y","done","init","drawImage","x","Math","floor","random","console","log","col","yPos","gui","dat","add","src","onload","doMelt","swap","open","this","map","index","key","activateProject","React","Component","App","id","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.28bbac27.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (<div>\r\n    <header className=\"header\">\r\n    <div>\r\n              <p>\r\n                  <a href=\"https://github.com/fruityvegetables\" target=\"blank\">Github</a>\r\n              </p>\r\n              <p>\r\n                  <a href=\"https://www.linkedin.com/in/gtroyer/\" target=\"blank\">LinkedIn</a>\r\n              </p>\r\n              <p>\r\n                  <a href=\"https://stackexchange.com/users/17871593/fruityvegetables\" target=\"blank\">StackExchange</a>\r\n              </p>\r\n              <p>\r\n                  <a href=\"mailto:gg.troyer@gmail.com\" target=\"blank\">Email Me!</a>\r\n              </p>\r\n              \r\n      </div>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./Project.css\";\r\n\r\nfunction Project(props) {\r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"content\">\r\n\r\n          <div>\r\n            <strong>\r\n                <h3>\r\n                    {props.name}\r\n\r\n                </h3>\r\n                </strong> \r\n            <div className=\"img-container\">\r\n            </div>\r\n          </div>\r\n          <p>\r\n            <strong>Link to deployed version:</strong> {props.link}\r\n          </p>\r\n          <button onClick={props.onClick}>{props.dataId}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;","import React from \"react\";\r\nimport Project from \"../Project/Project.js\";\r\nimport \"./ProjectHolder.css\";\r\nimport * as dat from 'dat.gui';\r\nclass ProjectHolder extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            projects: [\r\n                {\r\n                    name: \"React Employee Directory\",\r\n                    link: <a href=\"https://fruityvegetables.github.io/reactEmployeeDirectory/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"React Google Book Search\",\r\n                    link: <a href=\"https://gtroyer-react-book-search.herokuapp.com/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"Career Resource Wiki\",\r\n                    link: <a href=\"https://secure-shelf-77308.herokuapp.com/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"Employee CMS - Node Application\",\r\n                    link: <a href=\"https://github.com/fruityvegetables/employeeTracker\" target=\"blank\">It is a GitHub Repo!</a>\r\n                },\r\n                {\r\n                    name: \"Express Note Taker\",\r\n                    link: <a href=\"https://github.com/fruityvegetables/NoteTaker\" target=\"blank\">Also a GitHub Repo!</a>\r\n                },\r\n                {\r\n                    name: \"Superhero Background & Backgrounds\",\r\n                    link: <a href=\"https://cynthia-dm1216.github.io/ProjectGroup1/\" target=\"blank\">Click me!</a>\r\n                },\r\n                {\r\n                    name: \"PlantSheets\",\r\n                    link: <a href=\"https://github.com/kyledahl201/plant-market\" target=\"blank\">Click me!</a>\r\n                }\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n    activateProject(blah) {\r\n        //doom function goes here\r\n        (function () {\r\n            var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\r\n                window.setTimeout(callback, 1000 / 60);\r\n            };\r\n            window.requestAnimationFrame = requestAnimationFrame;\r\n        })();\r\n\r\n        var image1 = new Image(),\r\n            image2 = new Image();\r\n\r\n        var canvas = document.getElementById(\"canvas\"),\r\n            ctx = canvas.getContext(\"2d\"),\r\n            width = 640,\r\n            height = 480;\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        // wipe effect\r\n        var meltCan = document.createElement(\"canvas\"),\r\n            meltCtx = meltCan.getContext(\"2d\"),\r\n            images = [image1, image2],\r\n            bgImage = 1,\r\n            meltImage = 0,\r\n            settings = {\r\n                colSize: 2, // width of the coloumns\r\n                maxDev: 100, // max deviation a column can have\r\n                maxDiff: 50, // max difference in height a column can have to its neighbor\r\n                fallSpeed: 6, // how fast the columns fall\r\n            },\r\n            columns = width / settings.colSize, // total number of columns\r\n            y = [], // holds the current y pos of each column\r\n            done = true; // used to tell when the effect is actually done\r\n\r\n        meltCan.width = 640;\r\n        meltCan.height = 480;\r\n\r\n        function init() {\r\n            meltCtx.drawImage(images[meltImage], 0, 0);\r\n            // seed the rest of the y array\r\n            for (var x = 0; x < columns; x++) {\r\n                // seed the first element of the y array with a value between 0 and -maxDeviation\r\n                if (x === 0) {\r\n                    y[x] = -Math.floor(Math.random() * settings.maxDev);\r\n                } else {\r\n                    // assign a random value thats within maxDiff of our previous value;\r\n                    y[x] = y[x - 1] + (Math.floor(Math.random() * settings.maxDiff) - settings.maxDiff / 2);\r\n                }\r\n\r\n                // keep the value between 0 and -maxDev\r\n                if (y[x] > 0) {\r\n                    y[x] = 0;\r\n                } else if (y[x] < -settings.maxDev) {\r\n                    y[x] = -settings.maxDev;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        console.log(blah)\r\n        switch (blah) {\r\n            case \"Employee CMS - Node Application\":\r\n            case \"Express Note Taker\":\r\n                console.log(\"doom function ran!!!\");\r\n                //the rest of the DOOM FUNCTION!!!!\r\n                // wipe render\r\n                var col = 0,\r\n                    yPos = 0;\r\n\r\n                var gui = new dat.GUI();\r\n                gui.add(settings, 'colSize');\r\n                gui.add(settings, 'fallSpeed', 1, 40);\r\n                gui.add(settings, 'maxDev');\r\n                gui.add(settings, 'maxDiff');\r\n\r\n                // Data urls for the 2 image.. they are pretty long\r\n                image1.src = \"https://i.imgur.com/OopPMsA.jpg\"\r\n\r\n                image2.src = \"https://i.imgur.com/vsiBmjl.jpeg\"\r\n                image2.onload = function () {\r\n                    init();\r\n                    doMelt();\r\n                }\r\n                function doMelt() {\r\n                    ctx.drawImage(images[bgImage], 0, 0);\r\n                    done = true;\r\n\r\n                    for (col = 0; col < columns; col++) {\r\n                        y[col] += settings.fallSpeed;\r\n\r\n                        // if within bounds of the canvas do the melt.\r\n                        if (y[col] < 0) {\r\n                            done = false;\r\n                            yPos = 0;\r\n                        } else if (y[col] < height) {\r\n                            done = false;\r\n                            yPos = y[col];\r\n                        }\r\n\r\n                        ctx.drawImage(meltCan, col * settings.colSize, 0, settings.colSize, height, col * settings.colSize, yPos, settings.colSize, height);\r\n                    }\r\n\r\n                    if (done) {\r\n                        var swap = meltImage;\r\n                        meltImage = bgImage;\r\n                        bgImage = swap;\r\n                        init();\r\n                    }\r\n                    requestAnimationFrame(doMelt);\r\n                }\r\n                //end of doom function...\r\n                break;\r\n            case \"React Employee Directory\":\r\n                window.open(\"https://github.com/fruityvegetables/reactEmployeeDirectory/blob/master/README.md\");\r\n                break;\r\n            case \"React Google Book Search\":\r\n                window.open(\"https://github.com/fruityvegetables/reactBookSearch/blob/master/README.md\");\r\n                break;\r\n            case \"Career Resource Wiki\":\r\n                window.open(\"https://github.com/aroblesgalit/Project2/blob/master/README.md\");\r\n                break;\r\n            case \"Superhero Background & Backgrounds\":\r\n                window.open(\"https://github.com/cynthia-dm1216/ProjectGroup1/blob/master/README.md\");\r\n                break;\r\n            case \"PlantSheets\":\r\n                window.open(\"https://github.com/kyledahl201/plant-market/blob/master/README.md\");\r\n                break;\r\n            default:\r\n                console.log(\"no switch case made for this yet\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"projectHolder\">\r\n                {this.state.projects.map((projects, index) => (\r\n                    <Project\r\n                        name={projects.name}\r\n                        link={projects.link}\r\n                        dataId={projects.name}\r\n                        key={index}\r\n                        onClick={() => {\r\n                            this.activateProject(projects.name);\r\n\r\n                        }}\r\n                    />\r\n\r\n\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectHolder;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header.js';\nimport Footer from './components/Footer/Footer.js';\nimport ProjectHolder from './components/ProjectHolder/ProjectHolder.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Garrett Troyer's React Portfolio!</h1>\n      <Header />\n      <ProjectHolder />\n      <canvas id=\"canvas\"></canvas>\n      <canvas id=\"myCanvas\"></canvas>\n      <Footer />\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}